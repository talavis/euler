#!/usr/bin/env python3

'''
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P_4 + P_7 = 22 + 70 = 92 = P_8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, P_j and P_k, for which their sum and difference are pentagonal and D = |P_k − P_j| is minimised; what is the value of D?
'''

def test_pent(number, pents):
    '''
    Returns absolute value of difference if true
    otherwise returns -1
    '''
    pent = 1
    step = 4
    while pent < number :
        if pent + number in pents:
            if abs(pent - number) in pents:
                   return abs(pent - number)
        pent += step
        step += 3
    return -1

pents = {1,5}
current = 5
to_check = 5
check_step = 7
step = 7

while True:
    if to_check * 2 + check_step < max(pents) : 
        res = test_pent(to_check, pents)
        if res != -1:
            print(res)
            break
        to_check += check_step
        check_step += 3
    current += step
    step += 3
    pents.add(current)
